# 상하좌우 - 최종 좌표 구하기

# 첫 줄: 공간 크기 N (N x N)
N = int(input().strip())

# 둘째 줄: 이동 계획 (공백으로 구분된 L/R/U/D)
move = input().split()

# 시작 위치 (문제 조건)
x, y = 1, 1

# 각 명령에 대한 이동 변화량(행, 열)
# 위/아래는 행 번호가 변하고, 좌/우는 열 번호가 변함
dx = {'L': 0,  'R': 0,  'U': -1, 'D': 1}
dy = {'L': -1, 'R': 1,  'U': 0,  'D': 0}

for p in move:
    # 다음에 이동할 좌표
    nx = x + dx[p]
    ny = y + dy[p]

    # 격자 범위를 벗어나면 해당 이동은 무시
    if not (1 <= nx <= N and 1 <= ny <= N):
        continue

    # 유효하면 위치 갱신
    x, y = nx, ny

# 결과 출력: 최종 좌표 (행, 열)
print(x, y)
